version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: watermaji_postgres_dev
    environment:
      POSTGRES_DB: watermaji
      POSTGRES_USER: watermaji_user
      POSTGRES_PASSWORD: watermaji_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./apps/backend/db/init:/docker-entrypoint-initdb.d
    networks:
      - watermaji_network

  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: watermaji_mongodb_dev
    environment:
      MONGO_INITDB_DATABASE: watermaji_logs
      MONGO_INITDB_ROOT_USERNAME: watermaji_admin
      MONGO_INITDB_ROOT_PASSWORD: watermaji_admin_password
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
    networks:
      - watermaji_network

  # Redis Cache
  redis:
    image: redis:7.2-alpine
    container_name: watermaji_redis_dev
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - watermaji_network

  # Backend API
  backend:
    build:
      context: ./apps/backend
      dockerfile: Dockerfile
    container_name: watermaji_backend_dev
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=development
      - PORT=3001
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=watermaji
      - POSTGRES_USER=watermaji_user
      - POSTGRES_PASSWORD=watermaji_password
      - MONGODB_URI=mongodb://mongodb:27017/watermaji_logs
      - REDIS_HOST=redis
      - CORS_ORIGINS=http://localhost:3000,http://localhost:3001,http://localhost:3002,http://localhost:3003,http://localhost:3004,http://localhost:3005,http://frontend:3000,http://host.docker.internal:3000
      - JWT_SECRET=746971f560a53d639db8b3985b2bb295
      - JWT_ACCESS_TOKEN_EXPIRY=15m
      - JWT_REFRESH_TOKEN_EXPIRY=7d
    depends_on:
      - postgres
      - mongodb
      - redis
    networks:
      - watermaji_network
    restart: unless-stopped
    extra_hosts:
      - "host.docker.internal:host-gateway"

  # Frontend Dashboard
  frontend:
    build:
      context: ./apps/frontend
      dockerfile: Dockerfile
    container_name: watermaji_frontend_dev
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://localhost:3001
    depends_on:
      - backend
    networks:
      - watermaji_network
    restart: unless-stopped
    extra_hosts:
      - "host.docker.internal:host-gateway"

  # pgAdmin (Optional - for database management)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: watermaji_pgadmin_dev
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@watermaji.com
      PGADMIN_DEFAULT_PASSWORD: admin_password
    ports:
      - "5050:80"
    depends_on:
      - postgres
    networks:
      - watermaji_network

volumes:
  postgres_data:
  mongodb_data:
  redis_data:

networks:
  watermaji_network:
    driver: bridge
